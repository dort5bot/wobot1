##ğŸŸ¥1ğŸŸ¥ğŸŸ¥Dockerfile venv tabanlÄ±
# ---------- Build Stage ----------
FROM python:3.11-slim AS builder

WORKDIR /app

# Gerekli sistem araÃ§larÄ±nÄ± yÃ¼kle (C kÃ¼tÃ¼phaneleri vs.)
RUN apt-get update && apt-get install -y gcc libffi-dev && rm -rf /var/lib/apt/lists/*

# Virtual environment oluÅŸtur
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Requirements dosyasÄ±nÄ± kopyala ve yÃ¼kle
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# ---------- Runtime Stage ----------
FROM python:3.11-slim AS runtime

WORKDIR /app

# SaÄŸlÄ±k kontrolÃ¼ ve bazÄ± araÃ§lar
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Non-root user oluÅŸtur
RUN addgroup --system --gid 1001 appgroup && \
    adduser --system --uid 1001 appuser

# Virtual environmentâ€™Ä± builder aÅŸamasÄ±ndan kopyala
COPY --from=builder /opt/venv /opt/venv

# PATH ve PYTHONPATH ayarlarÄ±
ENV PATH="/opt/venv/bin:$PATH"
ENV PYTHONPATH="/opt/venv/lib/python3.11/site-packages"

# Uygulama dosyalarÄ±nÄ± kopyala
COPY --chown=appuser:appgroup . .

# Port ve saÄŸlÄ±k kontrolÃ¼
EXPOSE 10000
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:10000/ || exit 1

# Non-root kullanÄ±cÄ±ya geÃ§
USER appuser

# UygulamayÄ± baÅŸlat
CMD ["python", "main.py"]

